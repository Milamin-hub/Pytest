from decimal import Decimal
from fractions import Fraction
import sys
# Двоичные числа начинаются с комбинации символов 0Ь (или ов) и содержат цифры от 0 или 1:

# Восьмеричные числа начинаются с нуля и следующей за ним латинской буквы о
# (регистр не имеет значения) и содержат цифры от о до 7:

# Шестнадцатеричные числа начинаются с комбинации символов 0х и могут содержать цифры 
# от 0 до 9 и буквы от A до F (регистр букв не имеет значения):

print("Двоичные числа 0b: ", 0b1001010) # << 74
print("Восьмеричные числа 0o: ", 0o105) # << 69
print("Шестнадцатеричные числа 0x: ", 0x3F) # << 63

""" Decimal """

print("0.3-0.1-0.1-0.1")
print("Неверно: ", 0.3-0.1-0.1-0.1) # -2.7755575615628914е-17 следует использовать модуль decimal для вещественных чисел:
x = Decimal ("0.3") - Decimal ("0.1") - Decimal ("0.1") - Decimal ("0.1")
print("Верно: ", x)

""" Fraction """

x = Fraction (1, 2) # Fraction используеться для дробей
print(x) # 1/2

""" complex number """

print(2 + 2j + 2) # (4 + 2j)

""" bin() """

x = int(input("Введите число: "))
z = bin(x) # преобразует десятичное число в двоичное
print("Двоичные числа 0b: ", z)

""" oct() """

z = oct(x) # преобразует десятичное число в восьмеричное
print("Восьмеричные числа 0o: ", z)

""" hex() """

z = hex(x) # преобразует десятичное число в шестнадцатеричное
print("Шестнадцатеричные числа 0x: ", z)

""" round() """

z = round(0.49, 1) # Округление числа
print("Округление числа: ", z)

""" abs() """

z = abs(-24.4) # Возвращает абсолютное число
print("Возвращает абсолютное число: ", z)

""" pow (<Число>, <Степень>[, <Делитель>]) """

z = pow(5, 3) # Возводит в степень
print("Возводит в степень: ", z)

""" pow(10, 2, 2) ~ (10 ** 2) % 2 """

z = pow(5, 3, 2) # Остаток от деления степени
print("Остаток от деления степени: ", z)

""" max() """ 

z = max(1, 3, 2, 10, 25, 33, 6, 9 , 11) # Максимальное число из списка
print("Максимальное число из списка: ", z)

z = min( 10, 25, 33, 6, 9, 4, 5, 3, 3, 10) # Минимальное число из списка
print("Минимальное число из списка: ", z)

"""  sum(<Последовательность> [, «Начальное значение>]) """

z = sum((10, 20, 30, 40), 2), sum([], 2) # возвращает сумму значений элементов последовательности 
print("Сумма элементов последовательности: ", z)

q = list(z)
print(q)

""" divmod (x, y) ~ (х // у, х % у) """
x = 10
y = 3
z = list(divmod(x, y)) # Возвращает кортеж из двух значений
print("Число от деления и остаток: ", z)

""" .is_integer() """

z = (2.1).is_integer() # возвращает True, если заданное вещественное число не содержит дроб­ной части
print("Целое число: ", z)

""" as_integer_ratio()  """

z = (0.5).as_integer_ratio() # возвращает кортеж из двух целых чисел, представляющих собой числитель и знаменатель дроби, которая соответствует заданному числу:
w1, w2 = list(z)
q = Fraction(w1, w2)
print("Дробь: ", q)

input()

arr = sys.argv[:] # Сохраняет в переменную имя файла
for n in arr:
    print("Имя файла: ", n)