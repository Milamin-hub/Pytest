import re

sli = "-word1 -word2 -word3 -word4 -word5"
p1 = re.findall(r"\s\-([a-z0-9]+)\s", sli, re.S | re.I)
print(p1)

# match () — проверяет соответствие с началом строки. Формат метода

rC = re.compile(r"[0-9]+")
print ("Найдено" if rC.match("123str") else "Нет")

р2 = r"[0-9]+"
print("Найдено" if re.search(р2, "str123") else "Нет")

# ♦ ге — ссылка на скомпилированный шаблон, указанный в методах (функциях) match(),
# search() и fullmatch(). Через эту ссылку доступны следующие атрибуты:
# • groups — количество групп в шаблоне;
# • groupindex — словарь с названиями групп и их номерами;
# • pattern — исходная строка с регулярным выражением;
# • flags — комбинация флагов, заданных при создании регулярного выражения в
# функции compile о, и флагов, указанных в самом регулярном выражении, в конструкции (?aiLmsux);
# ♦ string— значение параметра <Строка> в методах (функциях) matcho, search() и
# fullmatch();
# ♦ pos — значение параметра сначальная позиция> в методах match(), search() и fullmatch();
# ♦ endpos— значение параметра <Конечная позиция> в методах match(), search() и
# fullmatch();
# ♦ lastindex— возвращает номер последней группы или значение None, если поиск завершился неудачей;
# ♦ lastgroup — возвращает название последней группы или значение None, если эта группа
# не имеет имени, или поиск завершился неудачей:

p3 = re.compile(r"(?P<num>[0-9]+)(?P<str>[a-z]+)")
s1 = "str123456str"
m1 = p3.search(s1)
# start() — возвращает индекс начала фрагмента, соответствующего заданной группе.
# end() — возвращает индекс конца фрагмента, соответствующего заданной группе.
# span() — возвращает кортеж, содержащий начальный и конечный индексы фрагмента
m2 = m1.start("str"), m1.end("num"), m1.span("str") 
print(m2)

# expand() — производит замену в строке. Внутри указанного шаблона можно использовать обратные ссылки



while True:
    email = input("Введите cвою почту : ")
    p4 = r"""(?P<name>[a-z0-9_.-]+)@(?P<host>(?:[a-z0-9-]+\.)+[a-z]{2,6})"""
    p5 = re.compile(p4, re.I | re.VERBOSE)
    m10 = p5.search(email)
    if not m10:
        print("E-mail не соответствует шаблону")
        continue
    else:
        print("E-mail: ", m10.group(0))
        print("Ящик: ", m10.group(1), "\nДомен: " + "@" + m10.group(2))
        break