import re

date = "28.08.2021"

p = re.compile(r"^[0-3][0-9]\.[01][0-9]\.[12][09][0-9][0-9]$")
if p.search(date):
    print("Дата введена правильно")
else:
    print("Дата введена неправильно")

# \b — привязка к началу слова
# \B — привязка к позиции, не являющейся началом слова.

c = re.compile (r"\Byt\B")
print ("Найдено" if c.search("python") else "Нет")

# ♦ \d — соответствует любой цифре. При указании флага a (ascii)эквивалентно [0-9];
# ♦ \w — соответствует любой букве, цифре или символу подчеркивания. При указании флага a (ascii) эквивалентно [a-zA-zo-9_];
# ♦ \s— любой пробельный символ. При указании флага a (ascii) эквивалентно [\t\n\r\f\v];
# ♦ \d — не цифра. При указании флага a (ascii) эквивалентно [Л0-9];
# ♦ \w — не буква, не цифра и не символ подчеркивания. При указании флага a (ascii) эквивалентно Pa-zA-Z0-9_];
# ♦ \s — не пробельный символ. При указании флага a (ascii) эквивалентно [A\t\n\r\f\v].

# ♦ (п> — п вхождений символа в строку. Например, шаблон г"Л [0-9] (2 }$" соответствует
# двум вхождениям любой цифры;
# ♦ {п,} — п или более вхождений символа в строку. Например, шаблон г,,Л[0-9]{2,}$"
# соответствует двум и более вхождениям любой цифры;
# ♦ {п,ш} — не менее п и не более m вхождений символа в строку. Числа указываются через
# запятую без пробела. Например, шаблон г"Л[0-9] {2,4}$" соответствует от двух до
# четырех вхождений любой цифры;
# ♦ * — ноль или большее число вхождений символа в строку. Эквивалентно комбинации {0,};
# ♦ +— одно или большее число вхождений символа в строку. Эквивалентно комбинации {1,};
# ♦ ? — ни одного или одно вхождение символа в строку. Эквивалентно комбинации {0,1}.

email = "Milamin@gmail.com"
s = re.compile(r"""(?P<name>[a-z0-9_.-]+)@(?P<host>(?:[a-z0-9-]+\.)+[a-z]{2,6})""", re.I | re.VERBOSE)
r = s.search(email)
print("Ваша почта: " + r.group("name") + "@" + r.group("host"))
print("Название ящика: ", r.group("name"))
print("Ваш домен: ", r.group("host"))

# ♦(?#...) — комментарий. Текст внутри круглых скобок игнорируется;

